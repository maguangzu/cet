<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	
		 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
			<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/cetsys?useUnicode=true&amp;characterEncoding=UTF-8"/>
			<property name="user" value="root"/>
			<property name="password" value="root"/>
			<property name="initialPoolSize" value="5"></property>
			<property name="minPoolSize" value="5"></property>
			<property name="maxPoolSize" value="15"/>
			<property name="checkoutTimeout" value="1000"/> 	
		</bean>
		<!-- 配置sessionfactory -->
		<bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		       <property name="dataSource" ref="dataSource"/>
		      
		       <property name="hibernateProperties">
				    <value>
				        hibernate.dialect=org.hibernate.dialect.MySQLDialect
				        hibernate.hbm2ddl.auto=update
				        hibernate.show_sql=true
				        hibernate.format_sql=false
				              	   
				      </value>
			     </property>
			     <property name="configLocations">
			       <list>
			         <value>
			           classpath:hibernate.cfg.xml	         
			         </value>
			       
			       </list>
			     
			     </property>
		</bean>
   
    
    
    
     <!-- 配置各个Dao 
	<bean id="adminDao" class="cn.car.dao.impl.AdminDaoImpl" parent="baseDao"></bean>
	<bean id="userDao" class="cn.car.dao.impl.UserDaoImpl" parent="baseDao"></bean>
	<bean id="storeDao" class="cn.car.dao.impl.StoreDaoImpl" parent="baseDao"></bean>
	<bean id="typeDao" class="cn.car.dao.impl.TypeDaoImpl" parent="baseDao"></bean>
	<bean id="carDao" class="cn.car.dao.impl.CarDaoImpl" parent="baseDao"></bean>
	<bean id="orderDao" class="cn.car.dao.impl.OrderDaoImpl" parent="baseDao"></bean>
	 -->
	
    <!-- 扫描service 
    <context:component-scan base-package="cn.car.service.impl"></context:component-scan>
    
    <bean id="adminService" class="cn.car.service.impl.AdminServiceImpl" ></bean>
	<bean id="userService" class="cn.car.service.impl.UserServiceImpl" ></bean>
	<bean id="storeService" class="cn.car.service.impl.StoreServiceImpl" ></bean>
	<bean id="typeService" class="cn.car.service.impl.TypeServiceImpl" ></bean>
	<bean id="carService" class="cn.car.service.impl.CarServiceImpl" ></bean>
	<bean id="orderService" class="cn.car.service.impl.OrderServiceImpl"></bean>
    -->
    
    
    
    	<!-- 自动扫描(自动注入) -->
	<context:component-scan base-package="cn.cet" />
	
    
     <!-- 事务有三个步骤 -->
    <!-- 事务管理 -->
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
    	<tx:attributes>
    		<tx:method name="find*" read-only="true"/>
    		<tx:method name="get*" read-only="true"/>
    		<tx:method name="load*" read-only="true"/>
    		<tx:method name="list*" read-only="true"/>
    		<tx:method name="search*" read-only="true"/>
    		<tx:method name="*" rollback-for="Throwable"/>
    	</tx:attributes>
    </tx:advice>
    <!-- 配置需要进行事务控制的类 -->
    <aop:config>
    	<aop:pointcut id="serviceOperation" expression="bean(*Service)" />
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>
    
   
	
	
	
   
</beans>